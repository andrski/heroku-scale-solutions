{"version":3,"sources":["./src/environments/environment.ts","./src/app/baseUrl.ts","./src/app/services/get-data.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export const BASE_API_URL = 'https://cors-anywhere.herokuapp.com/http://www.mrsoft.by/data.json';\n","import { Injectable } from '@angular/core';\nimport { BASE_API_URL } from '../baseUrl';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetDataService {\n\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any> {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Origin', 'www.mrsoft.by');\n\n    return this.http.get(BASE_API_URL, {headers});\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"input-wrapper\">\n    <mat-form-field class=\"custom-form-field\" appearance=\"outline\">\n      <mat-label>input here</mat-label>\n      <input matInput type=\"text\" [(ngModel)]=\"inputValue\">\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearInputValue()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n  <div class=\"actions-wrapper\">\n    <div class=\"btn-length\">\n      <button id=\"basic\" type=\"button\" color=\"primary\" mat-button (click)=\"getLength()\">\n        length\n      </button>\n    </div>\n    <div class=\"btn-sub-string\">\n      <button id=\"basic\" type=\"button\" color=\"primary\" mat-button (click)=\"getCaseString()\">\n        subSrting\n      </button>\n    </div>\n    <div class=\"label-checkbox\">\n      <mat-checkbox class=\"example-margin\"\n                  color=\"primary\"\n                  [(ngModel)]=\"checked\"></mat-checkbox>\n      <div>\n        {{checked ? 'sensitive' : 'insensitive'}}\n      </div>\n    </div>\n  </div>\n  <div class=\"result-data\" *ngFor=\"let item of filterData\">\n    {{item}}\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { GetDataService } from './services/get-data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  inputValue = '';\n  checked = false;\n  data: string[];\n  filterData: string[];\n\n  constructor(private getDataService: GetDataService) {\n    this.data = [];\n    this.filterData = [];\n  }\n\n  ngOnInit(): void {\n    // tslint:disable-next-line: deprecation\n    this.getDataService.getData().subscribe((data: any) => {\n      this.data = data.data;\n    });\n  }\n\n  clearInputValue(): void {\n    this.inputValue = '';\n  }\n\n  getLength(): void {\n    this.filterData = [];\n    if (parseInt(this.inputValue, 16)) {\n      this.data.forEach((item) => {\n        if (item.length >= Number(this.inputValue)) {\n          this.filterData.push(item);\n        }\n      });\n    }\n  }\n\n  getCaseString(): void {\n    this.filterData = this.data.filter((str) =>\n    (this.checked ? str : str.toLowerCase()).includes(\n      this.checked ? this.inputValue : this.inputValue.toLowerCase()) );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}